* osawm.el
=osawm= is a window manager for Mac OS implemented in Emacs, using =osascript= to execute Applescript scripts. It isn't /really/ a window manager, but uses âœ¨ /smoke and mirrors/ ðŸª„ to give you the illusion that Emacs is managing your windows. If you're interested in more details, see the /How it works/ section later.

#+begin_quote
ðŸš§ This package is a work in progress, and currently only supports managing Google Chrome windows.
#+end_quote
** Installation
*** Install the Emacs package
This package hasn't been published on MELPA yet, but you can install it from source control. For example, if you use =use-package=:

#+begin_src elisp :results none
(use-package osawm
  :vc (:fetcher github :repo "andykuszyk/osawm.el")
  :config (global-osawm-mode))
#+end_src
#+begin_quote
ðŸ’¡ Enabling =global-osawm-mode= isn't /completely/ necessary, but does enable refreshing window screenshots when you switch back to Emacs.
#+end_quote
** Usage
There are two main functions of this package:

1. "Launching" a Mac OS app to an =osawm= buffer (/currently only Chrome is supported/)
2. "Activating" a Mac OS app from an =osawm= Emacs buffer
*** Launching an app
If you want an app's position and visibility to be managed by =osawm=, it needs to be /launched/ by =osawm= too.

Currently, only Chrome is supported via the =osawm-launch-chrome= command.

This establishes a relationship between the app and the new buffer in Emacs, which will allow you to manage the app window's location and size using an Emacs window.
*** Activating an app
An =osawm= buffer normally displays a screenshot of its app when it isn't /activated/. In order to actually interact with the app, and bring it into focus, you open the buffer and /activate/ it. This will focus the app over the Emacs frame.

Activating an app is achieved by running the =osawm-activate= command (bound to =C-c C-c= by default) in an =osawm= buffer.

You are now /out of Emacs/, and will need to return to Emacs to continue managing your windows.
*** Returning to Emacs
Since the last activated window was Emacs, you should always be able to return directly to Emacs by pressing =Cmd-tab= once (using Mac OS' native window switcher).
*** A note on updating windows
When you return to Emacs, or resize a window within Emacs, the screenshots displayed by =osawm= buffers should automatically update. This behaviour is enabled by =global-osawm-mode=.
** TODO Configuration
** TODO How it works
** TODO Contributions
